/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'com.github.sherter.google-java-format' version '0.9'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // Use Randomized testing
    testImplementation 'com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.7.8'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // We use caffeine for our time-windowed cache
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.6'

}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    minimize {
        exclude(dependency('com.github.ben-manes.caffeine:.*:.*'))
        exclude(dependency('ch.qos.logback:.*:.*'))
    }
}

task printProps {
    doLast {
        println System.properties['logback.configurationFile']
        println System.properties['logdir']
    }
}

tasks.build {
    doFirst {
        file('logs').mkdir()
    }
    dependsOn tasks.shadowJar
}

tasks.compileJava {
    dependsOn tasks.verifyGoogleJavaFormat
}

tasks.verifyGoogleJavaFormat {
    dependsOn tasks.googleJavaFormat
}

tasks.clean.doLast {
    file('logs').deleteDir()
}

version = '0.1.0'